// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.1
// source: pkg/drivers/messagestructures/kinedata.proto

package messagestructures

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KineTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Testid  int64  `protobuf:"varint,1,opt,name=testid,proto3" json:"testid,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *KineTest) Reset() {
	*x = KineTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KineTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KineTest) ProtoMessage() {}

func (x *KineTest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KineTest.ProtoReflect.Descriptor instead.
func (*KineTest) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{0}
}

func (x *KineTest) GetTestid() int64 {
	if x != nil {
		return x.Testid
	}
	return 0
}

func (x *KineTest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ResponseTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responseid int64  `protobuf:"varint,1,opt,name=responseid,proto3" json:"responseid,omitempty"`
	Content    string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ResponseTest) Reset() {
	*x = ResponseTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseTest) ProtoMessage() {}

func (x *ResponseTest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseTest.ProtoReflect.Descriptor instead.
func (*ResponseTest) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseTest) GetResponseid() int64 {
	if x != nil {
		return x.Responseid
	}
	return 0
}

func (x *ResponseTest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type KineInsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Kine can request a returning id
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Created        int64  `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Deleted        int64  `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	CreateRevision int64  `protobuf:"varint,5,opt,name=create_revision,json=createRevision,proto3" json:"create_revision,omitempty"`
	PrevRevision   int64  `protobuf:"varint,6,opt,name=prev_revision,json=prevRevision,proto3" json:"prev_revision,omitempty"`
	Lease          int64  `protobuf:"varint,7,opt,name=lease,proto3" json:"lease,omitempty"`
	Value          []byte `protobuf:"bytes,8,opt,name=value,proto3" json:"value,omitempty"`
	OldValue       []byte `protobuf:"bytes,9,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
}

func (x *KineInsert) Reset() {
	*x = KineInsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KineInsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KineInsert) ProtoMessage() {}

func (x *KineInsert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KineInsert.ProtoReflect.Descriptor instead.
func (*KineInsert) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{2}
}

func (x *KineInsert) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KineInsert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KineInsert) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *KineInsert) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *KineInsert) GetCreateRevision() int64 {
	if x != nil {
		return x.CreateRevision
	}
	return 0
}

func (x *KineInsert) GetPrevRevision() int64 {
	if x != nil {
		return x.PrevRevision
	}
	return 0
}

func (x *KineInsert) GetLease() int64 {
	if x != nil {
		return x.Lease
	}
	return 0
}

func (x *KineInsert) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KineInsert) GetOldValue() []byte {
	if x != nil {
		return x.OldValue
	}
	return nil
}

type KineDispose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *KineDispose) Reset() {
	*x = KineDispose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KineDispose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KineDispose) ProtoMessage() {}

func (x *KineDispose) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KineDispose.ProtoReflect.Descriptor instead.
func (*KineDispose) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{3}
}

func (x *KineDispose) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type KineMassDisposeCompaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 int64 `protobuf:"varint,1,opt,name=param1,proto3" json:"param1,omitempty"`
	Param2 int64 `protobuf:"varint,2,opt,name=param2,proto3" json:"param2,omitempty"`
}

func (x *KineMassDisposeCompaction) Reset() {
	*x = KineMassDisposeCompaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KineMassDisposeCompaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KineMassDisposeCompaction) ProtoMessage() {}

func (x *KineMassDisposeCompaction) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KineMassDisposeCompaction.ProtoReflect.Descriptor instead.
func (*KineMassDisposeCompaction) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{4}
}

func (x *KineMassDisposeCompaction) GetParam1() int64 {
	if x != nil {
		return x.Param1
	}
	return 0
}

func (x *KineMassDisposeCompaction) GetParam2() int64 {
	if x != nil {
		return x.Param2
	}
	return 0
}

type KineQueryGeneric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryIdentifier int32  `protobuf:"varint,1,opt,name=query_identifier,json=queryIdentifier,proto3" json:"query_identifier,omitempty"` // [int32] Used by all queries
	Param1          string `protobuf:"bytes,2,opt,name=param1,proto3" json:"param1,omitempty"`                                           // [std::string] Used by all queries
	Param2          string `protobuf:"bytes,3,opt,name=param2,proto3" json:"param2,omitempty"`                                           // [std::string] Used by all queries
	Param3          string `protobuf:"bytes,4,opt,name=param3,proto3" json:"param3,omitempty"`                                           // [std::string] Used by queries 09 and 11
	Param4          string `protobuf:"bytes,5,opt,name=param4,proto3" json:"param4,omitempty"`                                           // [std::string] Used by query 09
	Param5          string `protobuf:"bytes,6,opt,name=param5,proto3" json:"param5,omitempty"`                                           // [std::string] Used by query 09
	Limit           int64  `protobuf:"zigzag64,7,opt,name=limit,proto3" json:"limit,omitempty"`                                          // [int64] Used by all queries (-1 indicates no limit) <-- Using sint64 type to support signed integers
}

func (x *KineQueryGeneric) Reset() {
	*x = KineQueryGeneric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KineQueryGeneric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KineQueryGeneric) ProtoMessage() {}

func (x *KineQueryGeneric) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KineQueryGeneric.ProtoReflect.Descriptor instead.
func (*KineQueryGeneric) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{5}
}

func (x *KineQueryGeneric) GetQueryIdentifier() int32 {
	if x != nil {
		return x.QueryIdentifier
	}
	return 0
}

func (x *KineQueryGeneric) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

func (x *KineQueryGeneric) GetParam2() string {
	if x != nil {
		return x.Param2
	}
	return ""
}

func (x *KineQueryGeneric) GetParam3() string {
	if x != nil {
		return x.Param3
	}
	return ""
}

func (x *KineQueryGeneric) GetParam4() string {
	if x != nil {
		return x.Param4
	}
	return ""
}

func (x *KineQueryGeneric) GetParam5() string {
	if x != nil {
		return x.Param5
	}
	return ""
}

func (x *KineQueryGeneric) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type KineQueryThree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
	Param2 string `protobuf:"bytes,2,opt,name=param2,proto3" json:"param2,omitempty"`
}

func (x *KineQueryThree) Reset() {
	*x = KineQueryThree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KineQueryThree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KineQueryThree) ProtoMessage() {}

func (x *KineQueryThree) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KineQueryThree.ProtoReflect.Descriptor instead.
func (*KineQueryThree) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{6}
}

func (x *KineQueryThree) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

func (x *KineQueryThree) GetParam2() string {
	if x != nil {
		return x.Param2
	}
	return ""
}

type KineQueryCompactRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KineQueryCompactRevision) Reset() {
	*x = KineQueryCompactRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KineQueryCompactRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KineQueryCompactRevision) ProtoMessage() {}

func (x *KineQueryCompactRevision) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KineQueryCompactRevision.ProtoReflect.Descriptor instead.
func (*KineQueryCompactRevision) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{7}
}

type KineQueryMaximumId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KineQueryMaximumId) Reset() {
	*x = KineQueryMaximumId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KineQueryMaximumId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KineQueryMaximumId) ProtoMessage() {}

func (x *KineQueryMaximumId) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KineQueryMaximumId.ProtoReflect.Descriptor instead.
func (*KineQueryMaximumId) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{8}
}

type ResponsePublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ReturningId *int64 `protobuf:"varint,2,opt,name=returning_id,json=returningId,proto3,oneof" json:"returning_id,omitempty"` // Used when Kine doesn't provide an id
}

func (x *ResponsePublish) Reset() {
	*x = ResponsePublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePublish) ProtoMessage() {}

func (x *ResponsePublish) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePublish.ProtoReflect.Descriptor instead.
func (*ResponsePublish) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{9}
}

func (x *ResponsePublish) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResponsePublish) GetReturningId() int64 {
	if x != nil && x.ReturningId != nil {
		return *x.ReturningId
	}
	return 0
}

type ResponseDispose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseDispose) Reset() {
	*x = ResponseDispose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDispose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDispose) ProtoMessage() {}

func (x *ResponseDispose) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDispose.ProtoReflect.Descriptor instead.
func (*ResponseDispose) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseDispose) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ResponseMassDisposeCompaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	DeletedRows int64 `protobuf:"varint,2,opt,name=deleted_rows,json=deletedRows,proto3" json:"deleted_rows,omitempty"`
}

func (x *ResponseMassDisposeCompaction) Reset() {
	*x = ResponseMassDisposeCompaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMassDisposeCompaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMassDisposeCompaction) ProtoMessage() {}

func (x *ResponseMassDisposeCompaction) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMassDisposeCompaction.ProtoReflect.Descriptor instead.
func (*ResponseMassDisposeCompaction) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseMassDisposeCompaction) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResponseMassDisposeCompaction) GetDeletedRows() int64 {
	if x != nil {
		return x.DeletedRows
	}
	return 0
}

type QueryGenericRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxId                  int64  `protobuf:"varint,1,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	CompactionPrevRevision int64  `protobuf:"varint,2,opt,name=compaction_prev_revision,json=compactionPrevRevision,proto3" json:"compaction_prev_revision,omitempty"`
	Theid                  int64  `protobuf:"varint,3,opt,name=theid,proto3" json:"theid,omitempty"`
	Name                   string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Created                int64  `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	Deleted                int64  `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	CreateRevision         int64  `protobuf:"varint,7,opt,name=create_revision,json=createRevision,proto3" json:"create_revision,omitempty"`
	PrevRevision           int64  `protobuf:"varint,8,opt,name=prev_revision,json=prevRevision,proto3" json:"prev_revision,omitempty"`
	Lease                  int64  `protobuf:"varint,9,opt,name=lease,proto3" json:"lease,omitempty"`
	Value                  []byte `protobuf:"bytes,10,opt,name=value,proto3" json:"value,omitempty"`
	OldValue               []byte `protobuf:"bytes,11,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
}

func (x *QueryGenericRow) Reset() {
	*x = QueryGenericRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGenericRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGenericRow) ProtoMessage() {}

func (x *QueryGenericRow) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGenericRow.ProtoReflect.Descriptor instead.
func (*QueryGenericRow) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{12}
}

func (x *QueryGenericRow) GetMaxId() int64 {
	if x != nil {
		return x.MaxId
	}
	return 0
}

func (x *QueryGenericRow) GetCompactionPrevRevision() int64 {
	if x != nil {
		return x.CompactionPrevRevision
	}
	return 0
}

func (x *QueryGenericRow) GetTheid() int64 {
	if x != nil {
		return x.Theid
	}
	return 0
}

func (x *QueryGenericRow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryGenericRow) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *QueryGenericRow) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *QueryGenericRow) GetCreateRevision() int64 {
	if x != nil {
		return x.CreateRevision
	}
	return 0
}

func (x *QueryGenericRow) GetPrevRevision() int64 {
	if x != nil {
		return x.PrevRevision
	}
	return 0
}

func (x *QueryGenericRow) GetLease() int64 {
	if x != nil {
		return x.Lease
	}
	return 0
}

func (x *QueryGenericRow) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *QueryGenericRow) GetOldValue() []byte {
	if x != nil {
		return x.OldValue
	}
	return nil
}

type ResponseQueryGeneric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row []*QueryGenericRow `protobuf:"bytes,1,rep,name=row,proto3" json:"row,omitempty"`
}

func (x *ResponseQueryGeneric) Reset() {
	*x = ResponseQueryGeneric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseQueryGeneric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseQueryGeneric) ProtoMessage() {}

func (x *ResponseQueryGeneric) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseQueryGeneric.ProtoReflect.Descriptor instead.
func (*ResponseQueryGeneric) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseQueryGeneric) GetRow() []*QueryGenericRow {
	if x != nil {
		return x.Row
	}
	return nil
}

type ResponseQueryThree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ResponseQueryThree) Reset() {
	*x = ResponseQueryThree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseQueryThree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseQueryThree) ProtoMessage() {}

func (x *ResponseQueryThree) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseQueryThree.ProtoReflect.Descriptor instead.
func (*ResponseQueryThree) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseQueryThree) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseQueryThree) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ResponseQueryCompactRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResponseQueryCompactRevision) Reset() {
	*x = ResponseQueryCompactRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseQueryCompactRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseQueryCompactRevision) ProtoMessage() {}

func (x *ResponseQueryCompactRevision) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseQueryCompactRevision.ProtoReflect.Descriptor instead.
func (*ResponseQueryCompactRevision) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{15}
}

func (x *ResponseQueryCompactRevision) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResponseQueryMaximumId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResponseQueryMaximumId) Reset() {
	*x = ResponseQueryMaximumId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseQueryMaximumId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseQueryMaximumId) ProtoMessage() {}

func (x *ResponseQueryMaximumId) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseQueryMaximumId.ProtoReflect.Descriptor instead.
func (*ResponseQueryMaximumId) Descriptor() ([]byte, []int) {
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseQueryMaximumId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_pkg_drivers_messagestructures_kinedata_proto protoreflect.FileDescriptor

var file_pkg_drivers_messagestructures_kinedata_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2f,
	0x6b, 0x69, 0x6e, 0x65, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x22, 0x3c, 0x0a, 0x08, 0x4b, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x73, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x65, 0x73, 0x74, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x48, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x0a, 0x4b, 0x69,
	0x6e, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65,
	0x76, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c,
	0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6f,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x4b, 0x69, 0x6e, 0x65, 0x44,
	0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x19, 0x4b, 0x69, 0x6e, 0x65, 0x4d, 0x61,
	0x73, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x32, 0x22, 0xcb, 0x01, 0x0a, 0x10, 0x4b, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x35, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x40, 0x0a, 0x0e, 0x4b, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x68,
	0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x32, 0x22, 0x1a, 0x0a, 0x18, 0x4b, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x14, 0x0a, 0x12, 0x4b, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x61, 0x73, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x22, 0xd7, 0x02, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x6f, 0x77, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x65, 0x76, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x68, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x68, 0x65, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x4c, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x34, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x6f, 0x77, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x22, 0x3a,
	0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x1c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x32, 0xcc, 0x06, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55,
	0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x1d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x1a,
	0x22, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x65,
	0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x1a, 0x22, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01,
	0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x73, 0x73, 0x44, 0x69, 0x73,
	0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x65, 0x4d, 0x61, 0x73, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6f,
	0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x30, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x61, 0x73, 0x73, 0x44, 0x69, 0x73,
	0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x1a, 0x27, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x21, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x2e, 0x4b, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x68, 0x72, 0x65, 0x65, 0x1a,
	0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x68, 0x72, 0x65, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x2f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x64,
	0x12, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x64, 0x1a, 0x29, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
	0x49, 0x64, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6b, 0x33, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x6b, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pkg_drivers_messagestructures_kinedata_proto_rawDescOnce sync.Once
	file_pkg_drivers_messagestructures_kinedata_proto_rawDescData = file_pkg_drivers_messagestructures_kinedata_proto_rawDesc
)

func file_pkg_drivers_messagestructures_kinedata_proto_rawDescGZIP() []byte {
	file_pkg_drivers_messagestructures_kinedata_proto_rawDescOnce.Do(func() {
		file_pkg_drivers_messagestructures_kinedata_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_drivers_messagestructures_kinedata_proto_rawDescData)
	})
	return file_pkg_drivers_messagestructures_kinedata_proto_rawDescData
}

var file_pkg_drivers_messagestructures_kinedata_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pkg_drivers_messagestructures_kinedata_proto_goTypes = []interface{}{
	(*KineTest)(nil),                      // 0: MessageStructures.KineTest
	(*ResponseTest)(nil),                  // 1: MessageStructures.ResponseTest
	(*KineInsert)(nil),                    // 2: MessageStructures.KineInsert
	(*KineDispose)(nil),                   // 3: MessageStructures.KineDispose
	(*KineMassDisposeCompaction)(nil),     // 4: MessageStructures.KineMassDisposeCompaction
	(*KineQueryGeneric)(nil),              // 5: MessageStructures.KineQueryGeneric
	(*KineQueryThree)(nil),                // 6: MessageStructures.KineQueryThree
	(*KineQueryCompactRevision)(nil),      // 7: MessageStructures.KineQueryCompactRevision
	(*KineQueryMaximumId)(nil),            // 8: MessageStructures.KineQueryMaximumId
	(*ResponsePublish)(nil),               // 9: MessageStructures.ResponsePublish
	(*ResponseDispose)(nil),               // 10: MessageStructures.ResponseDispose
	(*ResponseMassDisposeCompaction)(nil), // 11: MessageStructures.ResponseMassDisposeCompaction
	(*QueryGenericRow)(nil),               // 12: MessageStructures.QueryGenericRow
	(*ResponseQueryGeneric)(nil),          // 13: MessageStructures.ResponseQueryGeneric
	(*ResponseQueryThree)(nil),            // 14: MessageStructures.ResponseQueryThree
	(*ResponseQueryCompactRevision)(nil),  // 15: MessageStructures.ResponseQueryCompactRevision
	(*ResponseQueryMaximumId)(nil),        // 16: MessageStructures.ResponseQueryMaximumId
}
var file_pkg_drivers_messagestructures_kinedata_proto_depIdxs = []int32{
	12, // 0: MessageStructures.ResponseQueryGeneric.row:type_name -> MessageStructures.QueryGenericRow
	2,  // 1: MessageStructures.DatabaseCommunication.RequestPublish:input_type -> MessageStructures.KineInsert
	3,  // 2: MessageStructures.DatabaseCommunication.RequestDispose:input_type -> MessageStructures.KineDispose
	4,  // 3: MessageStructures.DatabaseCommunication.RequestMassDisposeCompaction:input_type -> MessageStructures.KineMassDisposeCompaction
	5,  // 4: MessageStructures.DatabaseCommunication.RequestQueryGeneric:input_type -> MessageStructures.KineQueryGeneric
	6,  // 5: MessageStructures.DatabaseCommunication.RequestQueryThree:input_type -> MessageStructures.KineQueryThree
	7,  // 6: MessageStructures.DatabaseCommunication.RequestQueryCompactRevision:input_type -> MessageStructures.KineQueryCompactRevision
	8,  // 7: MessageStructures.DatabaseCommunication.RequestQueryMaximumId:input_type -> MessageStructures.KineQueryMaximumId
	0,  // 8: MessageStructures.DatabaseCommunication.RequestTest:input_type -> MessageStructures.KineTest
	9,  // 9: MessageStructures.DatabaseCommunication.RequestPublish:output_type -> MessageStructures.ResponsePublish
	10, // 10: MessageStructures.DatabaseCommunication.RequestDispose:output_type -> MessageStructures.ResponseDispose
	11, // 11: MessageStructures.DatabaseCommunication.RequestMassDisposeCompaction:output_type -> MessageStructures.ResponseMassDisposeCompaction
	13, // 12: MessageStructures.DatabaseCommunication.RequestQueryGeneric:output_type -> MessageStructures.ResponseQueryGeneric
	14, // 13: MessageStructures.DatabaseCommunication.RequestQueryThree:output_type -> MessageStructures.ResponseQueryThree
	15, // 14: MessageStructures.DatabaseCommunication.RequestQueryCompactRevision:output_type -> MessageStructures.ResponseQueryCompactRevision
	16, // 15: MessageStructures.DatabaseCommunication.RequestQueryMaximumId:output_type -> MessageStructures.ResponseQueryMaximumId
	1,  // 16: MessageStructures.DatabaseCommunication.RequestTest:output_type -> MessageStructures.ResponseTest
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_drivers_messagestructures_kinedata_proto_init() }
func file_pkg_drivers_messagestructures_kinedata_proto_init() {
	if File_pkg_drivers_messagestructures_kinedata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KineTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KineInsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KineDispose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KineMassDisposeCompaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KineQueryGeneric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KineQueryThree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KineQueryCompactRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KineQueryMaximumId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDispose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMassDisposeCompaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGenericRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseQueryGeneric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseQueryThree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseQueryCompactRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseQueryMaximumId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_drivers_messagestructures_kinedata_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_drivers_messagestructures_kinedata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_drivers_messagestructures_kinedata_proto_goTypes,
		DependencyIndexes: file_pkg_drivers_messagestructures_kinedata_proto_depIdxs,
		MessageInfos:      file_pkg_drivers_messagestructures_kinedata_proto_msgTypes,
	}.Build()
	File_pkg_drivers_messagestructures_kinedata_proto = out.File
	file_pkg_drivers_messagestructures_kinedata_proto_rawDesc = nil
	file_pkg_drivers_messagestructures_kinedata_proto_goTypes = nil
	file_pkg_drivers_messagestructures_kinedata_proto_depIdxs = nil
}
