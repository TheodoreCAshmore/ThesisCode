// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Communication.proto

#include "Communication.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace MessageStructures {
template <typename>
PROTOBUF_CONSTEXPR KineTest::KineTest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.testid_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KineTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KineTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KineTestDefaultTypeInternal() {}
  union {
    KineTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KineTestDefaultTypeInternal _KineTest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResponseTest::ResponseTest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.responseid_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseTestDefaultTypeInternal() {}
  union {
    ResponseTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseTestDefaultTypeInternal _ResponseTest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR KineInsert::KineInsert(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.old_value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.id_)*/ ::int64_t{0}

  , /*decltype(_impl_.created_)*/ ::int64_t{0}

  , /*decltype(_impl_.deleted_)*/ ::int64_t{0}

  , /*decltype(_impl_.create_revision_)*/ ::int64_t{0}

  , /*decltype(_impl_.prev_revision_)*/ ::int64_t{0}

  , /*decltype(_impl_.lease_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KineInsertDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KineInsertDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KineInsertDefaultTypeInternal() {}
  union {
    KineInsert _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KineInsertDefaultTypeInternal _KineInsert_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR KineDispose::KineDispose(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KineDisposeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KineDisposeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KineDisposeDefaultTypeInternal() {}
  union {
    KineDispose _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KineDisposeDefaultTypeInternal _KineDispose_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR KineMassDisposeCompaction::KineMassDisposeCompaction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.param1_)*/ ::int64_t{0}

  , /*decltype(_impl_.param2_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KineMassDisposeCompactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KineMassDisposeCompactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KineMassDisposeCompactionDefaultTypeInternal() {}
  union {
    KineMassDisposeCompaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KineMassDisposeCompactionDefaultTypeInternal _KineMassDisposeCompaction_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR KineQueryGeneric::KineQueryGeneric(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.param1_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.param2_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.param3_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.param4_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.param5_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.limit_)*/ ::int64_t{0}

  , /*decltype(_impl_.query_identifier_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KineQueryGenericDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KineQueryGenericDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KineQueryGenericDefaultTypeInternal() {}
  union {
    KineQueryGeneric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KineQueryGenericDefaultTypeInternal _KineQueryGeneric_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR KineQueryThree::KineQueryThree(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.param1_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.param2_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KineQueryThreeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KineQueryThreeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KineQueryThreeDefaultTypeInternal() {}
  union {
    KineQueryThree _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KineQueryThreeDefaultTypeInternal _KineQueryThree_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR KineQueryCompactRevision::KineQueryCompactRevision(
    ::_pbi::ConstantInitialized) {}
struct KineQueryCompactRevisionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KineQueryCompactRevisionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KineQueryCompactRevisionDefaultTypeInternal() {}
  union {
    KineQueryCompactRevision _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KineQueryCompactRevisionDefaultTypeInternal _KineQueryCompactRevision_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR KineQueryMaximumId::KineQueryMaximumId(
    ::_pbi::ConstantInitialized) {}
struct KineQueryMaximumIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KineQueryMaximumIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KineQueryMaximumIdDefaultTypeInternal() {}
  union {
    KineQueryMaximumId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KineQueryMaximumIdDefaultTypeInternal _KineQueryMaximumId_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResponsePublish::ResponsePublish(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.returning_id_)*/ ::int64_t{0}

  , /*decltype(_impl_.success_)*/ false
} {}
struct ResponsePublishDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponsePublishDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponsePublishDefaultTypeInternal() {}
  union {
    ResponsePublish _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponsePublishDefaultTypeInternal _ResponsePublish_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResponseDispose::ResponseDispose(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseDisposeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDisposeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDisposeDefaultTypeInternal() {}
  union {
    ResponseDispose _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDisposeDefaultTypeInternal _ResponseDispose_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResponseMassDisposeCompaction::ResponseMassDisposeCompaction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.deleted_rows_)*/ ::int64_t{0}

  , /*decltype(_impl_.success_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseMassDisposeCompactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseMassDisposeCompactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseMassDisposeCompactionDefaultTypeInternal() {}
  union {
    ResponseMassDisposeCompaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseMassDisposeCompactionDefaultTypeInternal _ResponseMassDisposeCompaction_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryGenericRow::QueryGenericRow(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.old_value_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.max_id_)*/ ::int64_t{0}

  , /*decltype(_impl_.compaction_prev_revision_)*/ ::int64_t{0}

  , /*decltype(_impl_.theid_)*/ ::int64_t{0}

  , /*decltype(_impl_.created_)*/ ::int64_t{0}

  , /*decltype(_impl_.deleted_)*/ ::int64_t{0}

  , /*decltype(_impl_.create_revision_)*/ ::int64_t{0}

  , /*decltype(_impl_.prev_revision_)*/ ::int64_t{0}

  , /*decltype(_impl_.lease_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryGenericRowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGenericRowDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGenericRowDefaultTypeInternal() {}
  union {
    QueryGenericRow _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGenericRowDefaultTypeInternal _QueryGenericRow_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResponseQueryGeneric::ResponseQueryGeneric(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.row_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseQueryGenericDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseQueryGenericDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseQueryGenericDefaultTypeInternal() {}
  union {
    ResponseQueryGeneric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseQueryGenericDefaultTypeInternal _ResponseQueryGeneric_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResponseQueryThree::ResponseQueryThree(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ ::int64_t{0}

  , /*decltype(_impl_.count_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseQueryThreeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseQueryThreeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseQueryThreeDefaultTypeInternal() {}
  union {
    ResponseQueryThree _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseQueryThreeDefaultTypeInternal _ResponseQueryThree_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResponseQueryCompactRevision::ResponseQueryCompactRevision(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseQueryCompactRevisionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseQueryCompactRevisionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseQueryCompactRevisionDefaultTypeInternal() {}
  union {
    ResponseQueryCompactRevision _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseQueryCompactRevisionDefaultTypeInternal _ResponseQueryCompactRevision_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResponseQueryMaximumId::ResponseQueryMaximumId(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseQueryMaximumIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseQueryMaximumIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseQueryMaximumIdDefaultTypeInternal() {}
  union {
    ResponseQueryMaximumId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseQueryMaximumIdDefaultTypeInternal _ResponseQueryMaximumId_default_instance_;
}  // namespace MessageStructures
static ::_pb::Metadata file_level_metadata_Communication_2eproto[17];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Communication_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Communication_2eproto = nullptr;
const ::uint32_t TableStruct_Communication_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineTest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineTest, _impl_.testid_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineTest, _impl_.content_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseTest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseTest, _impl_.responseid_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseTest, _impl_.content_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.created_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.deleted_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.create_revision_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.prev_revision_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.lease_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineInsert, _impl_.old_value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineDispose, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineDispose, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineMassDisposeCompaction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineMassDisposeCompaction, _impl_.param1_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineMassDisposeCompaction, _impl_.param2_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryGeneric, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryGeneric, _impl_.query_identifier_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryGeneric, _impl_.param1_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryGeneric, _impl_.param2_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryGeneric, _impl_.param3_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryGeneric, _impl_.param4_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryGeneric, _impl_.param5_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryGeneric, _impl_.limit_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryThree, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryThree, _impl_.param1_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryThree, _impl_.param2_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryCompactRevision, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::KineQueryMaximumId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponsePublish, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponsePublish, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponsePublish, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponsePublish, _impl_.returning_id_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseDispose, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseDispose, _impl_.success_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseMassDisposeCompaction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseMassDisposeCompaction, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseMassDisposeCompaction, _impl_.deleted_rows_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.max_id_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.compaction_prev_revision_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.theid_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.created_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.deleted_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.create_revision_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.prev_revision_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.lease_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::QueryGenericRow, _impl_.old_value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryGeneric, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryGeneric, _impl_.row_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryThree, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryThree, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryThree, _impl_.count_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryCompactRevision, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryCompactRevision, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryMaximumId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageStructures::ResponseQueryMaximumId, _impl_.id_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::MessageStructures::KineTest)},
        { 10, -1, -1, sizeof(::MessageStructures::ResponseTest)},
        { 20, -1, -1, sizeof(::MessageStructures::KineInsert)},
        { 37, -1, -1, sizeof(::MessageStructures::KineDispose)},
        { 46, -1, -1, sizeof(::MessageStructures::KineMassDisposeCompaction)},
        { 56, -1, -1, sizeof(::MessageStructures::KineQueryGeneric)},
        { 71, -1, -1, sizeof(::MessageStructures::KineQueryThree)},
        { 81, -1, -1, sizeof(::MessageStructures::KineQueryCompactRevision)},
        { 89, -1, -1, sizeof(::MessageStructures::KineQueryMaximumId)},
        { 97, 107, -1, sizeof(::MessageStructures::ResponsePublish)},
        { 109, -1, -1, sizeof(::MessageStructures::ResponseDispose)},
        { 118, -1, -1, sizeof(::MessageStructures::ResponseMassDisposeCompaction)},
        { 128, -1, -1, sizeof(::MessageStructures::QueryGenericRow)},
        { 147, -1, -1, sizeof(::MessageStructures::ResponseQueryGeneric)},
        { 156, -1, -1, sizeof(::MessageStructures::ResponseQueryThree)},
        { 166, -1, -1, sizeof(::MessageStructures::ResponseQueryCompactRevision)},
        { 175, -1, -1, sizeof(::MessageStructures::ResponseQueryMaximumId)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::MessageStructures::_KineTest_default_instance_._instance,
    &::MessageStructures::_ResponseTest_default_instance_._instance,
    &::MessageStructures::_KineInsert_default_instance_._instance,
    &::MessageStructures::_KineDispose_default_instance_._instance,
    &::MessageStructures::_KineMassDisposeCompaction_default_instance_._instance,
    &::MessageStructures::_KineQueryGeneric_default_instance_._instance,
    &::MessageStructures::_KineQueryThree_default_instance_._instance,
    &::MessageStructures::_KineQueryCompactRevision_default_instance_._instance,
    &::MessageStructures::_KineQueryMaximumId_default_instance_._instance,
    &::MessageStructures::_ResponsePublish_default_instance_._instance,
    &::MessageStructures::_ResponseDispose_default_instance_._instance,
    &::MessageStructures::_ResponseMassDisposeCompaction_default_instance_._instance,
    &::MessageStructures::_QueryGenericRow_default_instance_._instance,
    &::MessageStructures::_ResponseQueryGeneric_default_instance_._instance,
    &::MessageStructures::_ResponseQueryThree_default_instance_._instance,
    &::MessageStructures::_ResponseQueryCompactRevision_default_instance_._instance,
    &::MessageStructures::_ResponseQueryMaximumId_default_instance_._instance,
};
const char descriptor_table_protodef_Communication_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023Communication.proto\022\021MessageStructures"
    "\"+\n\010KineTest\022\016\n\006testid\030\001 \001(\003\022\017\n\007content\030"
    "\002 \001(\t\"3\n\014ResponseTest\022\022\n\nresponseid\030\001 \001("
    "\003\022\017\n\007content\030\002 \001(\t\"\251\001\n\nKineInsert\022\n\n\002id\030"
    "\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\017\n\007created\030\003 \001(\003\022\017\n\007"
    "deleted\030\004 \001(\003\022\027\n\017create_revision\030\005 \001(\003\022\025"
    "\n\rprev_revision\030\006 \001(\003\022\r\n\005lease\030\007 \001(\003\022\r\n\005"
    "value\030\010 \001(\014\022\021\n\told_value\030\t \001(\014\"\031\n\013KineDi"
    "spose\022\n\n\002id\030\001 \001(\003\";\n\031KineMassDisposeComp"
    "action\022\016\n\006param1\030\001 \001(\003\022\016\n\006param2\030\002 \001(\003\"\213"
    "\001\n\020KineQueryGeneric\022\030\n\020query_identifier\030"
    "\001 \001(\005\022\016\n\006param1\030\002 \001(\t\022\016\n\006param2\030\003 \001(\t\022\016\n"
    "\006param3\030\004 \001(\t\022\016\n\006param4\030\005 \001(\t\022\016\n\006param5\030"
    "\006 \001(\t\022\r\n\005limit\030\007 \001(\022\"0\n\016KineQueryThree\022\016"
    "\n\006param1\030\001 \001(\t\022\016\n\006param2\030\002 \001(\t\"\032\n\030KineQu"
    "eryCompactRevision\"\024\n\022KineQueryMaximumId"
    "\"N\n\017ResponsePublish\022\017\n\007success\030\001 \001(\010\022\031\n\014"
    "returning_id\030\002 \001(\003H\000\210\001\001B\017\n\r_returning_id"
    "\"\"\n\017ResponseDispose\022\017\n\007success\030\001 \001(\010\"F\n\035"
    "ResponseMassDisposeCompaction\022\017\n\007success"
    "\030\001 \001(\010\022\024\n\014deleted_rows\030\002 \001(\003\"\343\001\n\017QueryGe"
    "nericRow\022\016\n\006max_id\030\001 \001(\003\022 \n\030compaction_p"
    "rev_revision\030\002 \001(\003\022\r\n\005theid\030\003 \001(\003\022\014\n\004nam"
    "e\030\004 \001(\t\022\017\n\007created\030\005 \001(\003\022\017\n\007deleted\030\006 \001("
    "\003\022\027\n\017create_revision\030\007 \001(\003\022\025\n\rprev_revis"
    "ion\030\010 \001(\003\022\r\n\005lease\030\t \001(\003\022\r\n\005value\030\n \001(\014\022"
    "\021\n\told_value\030\013 \001(\014\"G\n\024ResponseQueryGener"
    "ic\022/\n\003row\030\001 \003(\0132\".MessageStructures.Quer"
    "yGenericRow\"/\n\022ResponseQueryThree\022\n\n\002id\030"
    "\001 \001(\003\022\r\n\005count\030\002 \001(\003\"*\n\034ResponseQueryCom"
    "pactRevision\022\n\n\002id\030\001 \001(\003\"$\n\026ResponseQuer"
    "yMaximumId\022\n\n\002id\030\001 \001(\0032\314\006\n\025DatabaseCommu"
    "nication\022U\n\016RequestPublish\022\035.MessageStru"
    "ctures.KineInsert\032\".MessageStructures.Re"
    "sponsePublish\"\000\022V\n\016RequestDispose\022\036.Mess"
    "ageStructures.KineDispose\032\".MessageStruc"
    "tures.ResponseDispose\"\000\022\200\001\n\034RequestMassD"
    "isposeCompaction\022,.MessageStructures.Kin"
    "eMassDisposeCompaction\0320.MessageStructur"
    "es.ResponseMassDisposeCompaction\"\000\022e\n\023Re"
    "questQueryGeneric\022#.MessageStructures.Ki"
    "neQueryGeneric\032\'.MessageStructures.Respo"
    "nseQueryGeneric\"\000\022_\n\021RequestQueryThree\022!"
    ".MessageStructures.KineQueryThree\032%.Mess"
    "ageStructures.ResponseQueryThree\"\000\022}\n\033Re"
    "questQueryCompactRevision\022+.MessageStruc"
    "tures.KineQueryCompactRevision\032/.Message"
    "Structures.ResponseQueryCompactRevision\""
    "\000\022k\n\025RequestQueryMaximumId\022%.MessageStru"
    "ctures.KineQueryMaximumId\032).MessageStruc"
    "tures.ResponseQueryMaximumId\"\000\022M\n\013Reques"
    "tTest\022\033.MessageStructures.KineTest\032\037.Mes"
    "sageStructures.ResponseTest\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_Communication_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Communication_2eproto = {
    false,
    false,
    2117,
    descriptor_table_protodef_Communication_2eproto,
    "Communication.proto",
    &descriptor_table_Communication_2eproto_once,
    nullptr,
    0,
    17,
    schemas,
    file_default_instances,
    TableStruct_Communication_2eproto::offsets,
    file_level_metadata_Communication_2eproto,
    file_level_enum_descriptors_Communication_2eproto,
    file_level_service_descriptors_Communication_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Communication_2eproto_getter() {
  return &descriptor_table_Communication_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Communication_2eproto(&descriptor_table_Communication_2eproto);
namespace MessageStructures {
// ===================================================================

class KineTest::_Internal {
 public:
};

KineTest::KineTest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.KineTest)
}
KineTest::KineTest(const KineTest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KineTest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_) {}

    , decltype(_impl_.testid_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), _this->GetArenaForAllocation());
  }
  _this->_impl_.testid_ = from._impl_.testid_;
  // @@protoc_insertion_point(copy_constructor:MessageStructures.KineTest)
}

inline void KineTest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.content_) {}

    , decltype(_impl_.testid_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KineTest::~KineTest() {
  // @@protoc_insertion_point(destructor:MessageStructures.KineTest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KineTest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
}

void KineTest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KineTest::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.KineTest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _impl_.testid_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KineTest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 testid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.testid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineTest.content"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* KineTest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.KineTest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 testid = 1;
  if (this->_internal_testid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_testid(), target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineTest.content");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.KineTest)
  return target;
}

::size_t KineTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.KineTest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  // int64 testid = 1;
  if (this->_internal_testid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_testid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KineTest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KineTest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KineTest::GetClassData() const { return &_class_data_; }


void KineTest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KineTest*>(&to_msg);
  auto& from = static_cast<const KineTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.KineTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_testid() != 0) {
    _this->_internal_set_testid(from._internal_testid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KineTest::CopyFrom(const KineTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.KineTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KineTest::IsInitialized() const {
  return true;
}

void KineTest::InternalSwap(KineTest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, lhs_arena,
                                       &other->_impl_.content_, rhs_arena);

  swap(_impl_.testid_, other->_impl_.testid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KineTest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[0]);
}
// ===================================================================

class ResponseTest::_Internal {
 public:
};

ResponseTest::ResponseTest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.ResponseTest)
}
ResponseTest::ResponseTest(const ResponseTest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResponseTest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_) {}

    , decltype(_impl_.responseid_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), _this->GetArenaForAllocation());
  }
  _this->_impl_.responseid_ = from._impl_.responseid_;
  // @@protoc_insertion_point(copy_constructor:MessageStructures.ResponseTest)
}

inline void ResponseTest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.content_) {}

    , decltype(_impl_.responseid_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.content_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResponseTest::~ResponseTest() {
  // @@protoc_insertion_point(destructor:MessageStructures.ResponseTest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseTest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
}

void ResponseTest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseTest::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.ResponseTest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _impl_.responseid_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseTest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 responseid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.responseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.ResponseTest.content"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResponseTest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.ResponseTest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 responseid = 1;
  if (this->_internal_responseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_responseid(), target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.ResponseTest.content");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.ResponseTest)
  return target;
}

::size_t ResponseTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.ResponseTest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  // int64 responseid = 1;
  if (this->_internal_responseid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_responseid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseTest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseTest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseTest::GetClassData() const { return &_class_data_; }


void ResponseTest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseTest*>(&to_msg);
  auto& from = static_cast<const ResponseTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.ResponseTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_responseid() != 0) {
    _this->_internal_set_responseid(from._internal_responseid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseTest::CopyFrom(const ResponseTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.ResponseTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseTest::IsInitialized() const {
  return true;
}

void ResponseTest::InternalSwap(ResponseTest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, lhs_arena,
                                       &other->_impl_.content_, rhs_arena);

  swap(_impl_.responseid_, other->_impl_.responseid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseTest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[1]);
}
// ===================================================================

class KineInsert::_Internal {
 public:
};

KineInsert::KineInsert(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.KineInsert)
}
KineInsert::KineInsert(const KineInsert& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KineInsert* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.value_) {}

    , decltype(_impl_.old_value_) {}

    , decltype(_impl_.id_) {}

    , decltype(_impl_.created_) {}

    , decltype(_impl_.deleted_) {}

    , decltype(_impl_.create_revision_) {}

    , decltype(_impl_.prev_revision_) {}

    , decltype(_impl_.lease_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  _impl_.old_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.old_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_old_value().empty()) {
    _this->_impl_.old_value_.Set(from._internal_old_value(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.lease_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.lease_));
  // @@protoc_insertion_point(copy_constructor:MessageStructures.KineInsert)
}

inline void KineInsert::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.value_) {}

    , decltype(_impl_.old_value_) {}

    , decltype(_impl_.id_) { ::int64_t{0} }

    , decltype(_impl_.created_) { ::int64_t{0} }

    , decltype(_impl_.deleted_) { ::int64_t{0} }

    , decltype(_impl_.create_revision_) { ::int64_t{0} }

    , decltype(_impl_.prev_revision_) { ::int64_t{0} }

    , decltype(_impl_.lease_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.old_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.old_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KineInsert::~KineInsert() {
  // @@protoc_insertion_point(destructor:MessageStructures.KineInsert)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KineInsert::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
  _impl_.old_value_.Destroy();
}

void KineInsert::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KineInsert::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.KineInsert)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.old_value_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lease_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.lease_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KineInsert::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineInsert.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 created = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.created_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 deleted = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.deleted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 create_revision = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.create_revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 prev_revision = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _impl_.prev_revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 lease = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.lease_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes old_value = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_old_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* KineInsert::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.KineInsert)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineInsert.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 created = 3;
  if (this->_internal_created() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_created(), target);
  }

  // int64 deleted = 4;
  if (this->_internal_deleted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        4, this->_internal_deleted(), target);
  }

  // int64 create_revision = 5;
  if (this->_internal_create_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        5, this->_internal_create_revision(), target);
  }

  // int64 prev_revision = 6;
  if (this->_internal_prev_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        6, this->_internal_prev_revision(), target);
  }

  // int64 lease = 7;
  if (this->_internal_lease() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        7, this->_internal_lease(), target);
  }

  // bytes value = 8;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(8, _s, target);
  }

  // bytes old_value = 9;
  if (!this->_internal_old_value().empty()) {
    const std::string& _s = this->_internal_old_value();
    target = stream->WriteBytesMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.KineInsert)
  return target;
}

::size_t KineInsert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.KineInsert)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // bytes value = 8;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  // bytes old_value = 9;
  if (!this->_internal_old_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_old_value());
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // int64 created = 3;
  if (this->_internal_created() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_created());
  }

  // int64 deleted = 4;
  if (this->_internal_deleted() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_deleted());
  }

  // int64 create_revision = 5;
  if (this->_internal_create_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_create_revision());
  }

  // int64 prev_revision = 6;
  if (this->_internal_prev_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_prev_revision());
  }

  // int64 lease = 7;
  if (this->_internal_lease() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_lease());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KineInsert::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KineInsert::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KineInsert::GetClassData() const { return &_class_data_; }


void KineInsert::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KineInsert*>(&to_msg);
  auto& from = static_cast<const KineInsert&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.KineInsert)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_old_value().empty()) {
    _this->_internal_set_old_value(from._internal_old_value());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_created() != 0) {
    _this->_internal_set_created(from._internal_created());
  }
  if (from._internal_deleted() != 0) {
    _this->_internal_set_deleted(from._internal_deleted());
  }
  if (from._internal_create_revision() != 0) {
    _this->_internal_set_create_revision(from._internal_create_revision());
  }
  if (from._internal_prev_revision() != 0) {
    _this->_internal_set_prev_revision(from._internal_prev_revision());
  }
  if (from._internal_lease() != 0) {
    _this->_internal_set_lease(from._internal_lease());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KineInsert::CopyFrom(const KineInsert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.KineInsert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KineInsert::IsInitialized() const {
  return true;
}

void KineInsert::InternalSwap(KineInsert* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.old_value_, lhs_arena,
                                       &other->_impl_.old_value_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KineInsert, _impl_.lease_)
      + sizeof(KineInsert::_impl_.lease_)
      - PROTOBUF_FIELD_OFFSET(KineInsert, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata KineInsert::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[2]);
}
// ===================================================================

class KineDispose::_Internal {
 public:
};

KineDispose::KineDispose(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.KineDispose)
}
KineDispose::KineDispose(const KineDispose& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.KineDispose)
}

inline void KineDispose::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

KineDispose::~KineDispose() {
  // @@protoc_insertion_point(destructor:MessageStructures.KineDispose)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KineDispose::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void KineDispose::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KineDispose::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.KineDispose)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KineDispose::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* KineDispose::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.KineDispose)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.KineDispose)
  return target;
}

::size_t KineDispose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.KineDispose)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KineDispose::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KineDispose::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KineDispose::GetClassData() const { return &_class_data_; }


void KineDispose::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KineDispose*>(&to_msg);
  auto& from = static_cast<const KineDispose&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.KineDispose)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KineDispose::CopyFrom(const KineDispose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.KineDispose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KineDispose::IsInitialized() const {
  return true;
}

void KineDispose::InternalSwap(KineDispose* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KineDispose::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[3]);
}
// ===================================================================

class KineMassDisposeCompaction::_Internal {
 public:
};

KineMassDisposeCompaction::KineMassDisposeCompaction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.KineMassDisposeCompaction)
}
KineMassDisposeCompaction::KineMassDisposeCompaction(const KineMassDisposeCompaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.KineMassDisposeCompaction)
}

inline void KineMassDisposeCompaction::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.param1_) { ::int64_t{0} }

    , decltype(_impl_.param2_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

KineMassDisposeCompaction::~KineMassDisposeCompaction() {
  // @@protoc_insertion_point(destructor:MessageStructures.KineMassDisposeCompaction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KineMassDisposeCompaction::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void KineMassDisposeCompaction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KineMassDisposeCompaction::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.KineMassDisposeCompaction)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.param1_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.param2_) -
      reinterpret_cast<char*>(&_impl_.param1_)) + sizeof(_impl_.param2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KineMassDisposeCompaction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 param1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 param2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.param2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* KineMassDisposeCompaction::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.KineMassDisposeCompaction)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 param1 = 1;
  if (this->_internal_param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_param1(), target);
  }

  // int64 param2 = 2;
  if (this->_internal_param2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this->_internal_param2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.KineMassDisposeCompaction)
  return target;
}

::size_t KineMassDisposeCompaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.KineMassDisposeCompaction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 param1 = 1;
  if (this->_internal_param1() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_param1());
  }

  // int64 param2 = 2;
  if (this->_internal_param2() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_param2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KineMassDisposeCompaction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KineMassDisposeCompaction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KineMassDisposeCompaction::GetClassData() const { return &_class_data_; }


void KineMassDisposeCompaction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KineMassDisposeCompaction*>(&to_msg);
  auto& from = static_cast<const KineMassDisposeCompaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.KineMassDisposeCompaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_param1() != 0) {
    _this->_internal_set_param1(from._internal_param1());
  }
  if (from._internal_param2() != 0) {
    _this->_internal_set_param2(from._internal_param2());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KineMassDisposeCompaction::CopyFrom(const KineMassDisposeCompaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.KineMassDisposeCompaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KineMassDisposeCompaction::IsInitialized() const {
  return true;
}

void KineMassDisposeCompaction::InternalSwap(KineMassDisposeCompaction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KineMassDisposeCompaction, _impl_.param2_)
      + sizeof(KineMassDisposeCompaction::_impl_.param2_)
      - PROTOBUF_FIELD_OFFSET(KineMassDisposeCompaction, _impl_.param1_)>(
          reinterpret_cast<char*>(&_impl_.param1_),
          reinterpret_cast<char*>(&other->_impl_.param1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata KineMassDisposeCompaction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[4]);
}
// ===================================================================

class KineQueryGeneric::_Internal {
 public:
};

KineQueryGeneric::KineQueryGeneric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.KineQueryGeneric)
}
KineQueryGeneric::KineQueryGeneric(const KineQueryGeneric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KineQueryGeneric* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.param1_) {}

    , decltype(_impl_.param2_) {}

    , decltype(_impl_.param3_) {}

    , decltype(_impl_.param4_) {}

    , decltype(_impl_.param5_) {}

    , decltype(_impl_.limit_) {}

    , decltype(_impl_.query_identifier_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.param1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_param1().empty()) {
    _this->_impl_.param1_.Set(from._internal_param1(), _this->GetArenaForAllocation());
  }
  _impl_.param2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_param2().empty()) {
    _this->_impl_.param2_.Set(from._internal_param2(), _this->GetArenaForAllocation());
  }
  _impl_.param3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param3_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_param3().empty()) {
    _this->_impl_.param3_.Set(from._internal_param3(), _this->GetArenaForAllocation());
  }
  _impl_.param4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param4_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_param4().empty()) {
    _this->_impl_.param4_.Set(from._internal_param4(), _this->GetArenaForAllocation());
  }
  _impl_.param5_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param5_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_param5().empty()) {
    _this->_impl_.param5_.Set(from._internal_param5(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.limit_, &from._impl_.limit_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.query_identifier_) -
    reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.query_identifier_));
  // @@protoc_insertion_point(copy_constructor:MessageStructures.KineQueryGeneric)
}

inline void KineQueryGeneric::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.param1_) {}

    , decltype(_impl_.param2_) {}

    , decltype(_impl_.param3_) {}

    , decltype(_impl_.param4_) {}

    , decltype(_impl_.param5_) {}

    , decltype(_impl_.limit_) { ::int64_t{0} }

    , decltype(_impl_.query_identifier_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.param1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param3_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param4_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param5_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param5_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KineQueryGeneric::~KineQueryGeneric() {
  // @@protoc_insertion_point(destructor:MessageStructures.KineQueryGeneric)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KineQueryGeneric::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.param1_.Destroy();
  _impl_.param2_.Destroy();
  _impl_.param3_.Destroy();
  _impl_.param4_.Destroy();
  _impl_.param5_.Destroy();
}

void KineQueryGeneric::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KineQueryGeneric::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.KineQueryGeneric)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.param1_.ClearToEmpty();
  _impl_.param2_.ClearToEmpty();
  _impl_.param3_.ClearToEmpty();
  _impl_.param4_.ClearToEmpty();
  _impl_.param5_.ClearToEmpty();
  ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.query_identifier_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.query_identifier_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KineQueryGeneric::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 query_identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.query_identifier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string param1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_param1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineQueryGeneric.param1"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string param2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_param2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineQueryGeneric.param2"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string param3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_param3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineQueryGeneric.param3"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string param4 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_param4();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineQueryGeneric.param4"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string param5 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_param5();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineQueryGeneric.param5"));
        } else {
          goto handle_unusual;
        }
        continue;
      // sint64 limit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* KineQueryGeneric::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.KineQueryGeneric)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 query_identifier = 1;
  if (this->_internal_query_identifier() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_query_identifier(), target);
  }

  // string param1 = 2;
  if (!this->_internal_param1().empty()) {
    const std::string& _s = this->_internal_param1();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineQueryGeneric.param1");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string param2 = 3;
  if (!this->_internal_param2().empty()) {
    const std::string& _s = this->_internal_param2();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineQueryGeneric.param2");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string param3 = 4;
  if (!this->_internal_param3().empty()) {
    const std::string& _s = this->_internal_param3();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineQueryGeneric.param3");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string param4 = 5;
  if (!this->_internal_param4().empty()) {
    const std::string& _s = this->_internal_param4();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineQueryGeneric.param4");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string param5 = 6;
  if (!this->_internal_param5().empty()) {
    const std::string& _s = this->_internal_param5();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineQueryGeneric.param5");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // sint64 limit = 7;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        7, this->_internal_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.KineQueryGeneric)
  return target;
}

::size_t KineQueryGeneric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.KineQueryGeneric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param1 = 2;
  if (!this->_internal_param1().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_param1());
  }

  // string param2 = 3;
  if (!this->_internal_param2().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_param2());
  }

  // string param3 = 4;
  if (!this->_internal_param3().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_param3());
  }

  // string param4 = 5;
  if (!this->_internal_param4().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_param4());
  }

  // string param5 = 6;
  if (!this->_internal_param5().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_param5());
  }

  // sint64 limit = 7;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_limit());
  }

  // int32 query_identifier = 1;
  if (this->_internal_query_identifier() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_query_identifier());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KineQueryGeneric::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KineQueryGeneric::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KineQueryGeneric::GetClassData() const { return &_class_data_; }


void KineQueryGeneric::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KineQueryGeneric*>(&to_msg);
  auto& from = static_cast<const KineQueryGeneric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.KineQueryGeneric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_param1().empty()) {
    _this->_internal_set_param1(from._internal_param1());
  }
  if (!from._internal_param2().empty()) {
    _this->_internal_set_param2(from._internal_param2());
  }
  if (!from._internal_param3().empty()) {
    _this->_internal_set_param3(from._internal_param3());
  }
  if (!from._internal_param4().empty()) {
    _this->_internal_set_param4(from._internal_param4());
  }
  if (!from._internal_param5().empty()) {
    _this->_internal_set_param5(from._internal_param5());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  if (from._internal_query_identifier() != 0) {
    _this->_internal_set_query_identifier(from._internal_query_identifier());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KineQueryGeneric::CopyFrom(const KineQueryGeneric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.KineQueryGeneric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KineQueryGeneric::IsInitialized() const {
  return true;
}

void KineQueryGeneric::InternalSwap(KineQueryGeneric* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.param1_, lhs_arena,
                                       &other->_impl_.param1_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.param2_, lhs_arena,
                                       &other->_impl_.param2_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.param3_, lhs_arena,
                                       &other->_impl_.param3_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.param4_, lhs_arena,
                                       &other->_impl_.param4_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.param5_, lhs_arena,
                                       &other->_impl_.param5_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KineQueryGeneric, _impl_.query_identifier_)
      + sizeof(KineQueryGeneric::_impl_.query_identifier_)
      - PROTOBUF_FIELD_OFFSET(KineQueryGeneric, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata KineQueryGeneric::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[5]);
}
// ===================================================================

class KineQueryThree::_Internal {
 public:
};

KineQueryThree::KineQueryThree(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.KineQueryThree)
}
KineQueryThree::KineQueryThree(const KineQueryThree& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KineQueryThree* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.param1_) {}

    , decltype(_impl_.param2_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.param1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_param1().empty()) {
    _this->_impl_.param1_.Set(from._internal_param1(), _this->GetArenaForAllocation());
  }
  _impl_.param2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_param2().empty()) {
    _this->_impl_.param2_.Set(from._internal_param2(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:MessageStructures.KineQueryThree)
}

inline void KineQueryThree::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.param1_) {}

    , decltype(_impl_.param2_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.param1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param1_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.param2_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KineQueryThree::~KineQueryThree() {
  // @@protoc_insertion_point(destructor:MessageStructures.KineQueryThree)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KineQueryThree::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.param1_.Destroy();
  _impl_.param2_.Destroy();
}

void KineQueryThree::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KineQueryThree::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.KineQueryThree)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.param1_.ClearToEmpty();
  _impl_.param2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KineQueryThree::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string param1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_param1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineQueryThree.param1"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string param2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_param2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.KineQueryThree.param2"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* KineQueryThree::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.KineQueryThree)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string param1 = 1;
  if (!this->_internal_param1().empty()) {
    const std::string& _s = this->_internal_param1();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineQueryThree.param1");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string param2 = 2;
  if (!this->_internal_param2().empty()) {
    const std::string& _s = this->_internal_param2();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.KineQueryThree.param2");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.KineQueryThree)
  return target;
}

::size_t KineQueryThree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.KineQueryThree)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param1 = 1;
  if (!this->_internal_param1().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_param1());
  }

  // string param2 = 2;
  if (!this->_internal_param2().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_param2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KineQueryThree::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KineQueryThree::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KineQueryThree::GetClassData() const { return &_class_data_; }


void KineQueryThree::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KineQueryThree*>(&to_msg);
  auto& from = static_cast<const KineQueryThree&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.KineQueryThree)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_param1().empty()) {
    _this->_internal_set_param1(from._internal_param1());
  }
  if (!from._internal_param2().empty()) {
    _this->_internal_set_param2(from._internal_param2());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KineQueryThree::CopyFrom(const KineQueryThree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.KineQueryThree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KineQueryThree::IsInitialized() const {
  return true;
}

void KineQueryThree::InternalSwap(KineQueryThree* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.param1_, lhs_arena,
                                       &other->_impl_.param1_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.param2_, lhs_arena,
                                       &other->_impl_.param2_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata KineQueryThree::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[6]);
}
// ===================================================================

class KineQueryCompactRevision::_Internal {
 public:
};

KineQueryCompactRevision::KineQueryCompactRevision(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:MessageStructures.KineQueryCompactRevision)
}
KineQueryCompactRevision::KineQueryCompactRevision(const KineQueryCompactRevision& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  KineQueryCompactRevision* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.KineQueryCompactRevision)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KineQueryCompactRevision::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KineQueryCompactRevision::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata KineQueryCompactRevision::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[7]);
}
// ===================================================================

class KineQueryMaximumId::_Internal {
 public:
};

KineQueryMaximumId::KineQueryMaximumId(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:MessageStructures.KineQueryMaximumId)
}
KineQueryMaximumId::KineQueryMaximumId(const KineQueryMaximumId& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  KineQueryMaximumId* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.KineQueryMaximumId)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KineQueryMaximumId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KineQueryMaximumId::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata KineQueryMaximumId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[8]);
}
// ===================================================================

class ResponsePublish::_Internal {
 public:
  using HasBits = decltype(std::declval<ResponsePublish>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ResponsePublish, _impl_._has_bits_);
  static void set_has_returning_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ResponsePublish::ResponsePublish(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.ResponsePublish)
}
ResponsePublish::ResponsePublish(const ResponsePublish& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.ResponsePublish)
}

inline void ResponsePublish::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.returning_id_) { ::int64_t{0} }

    , decltype(_impl_.success_) { false }

  };
}

ResponsePublish::~ResponsePublish() {
  // @@protoc_insertion_point(destructor:MessageStructures.ResponsePublish)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponsePublish::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponsePublish::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponsePublish::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.ResponsePublish)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.returning_id_ = ::int64_t{0};
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponsePublish::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // optional int64 returning_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _Internal::set_has_returning_id(&has_bits);
          _impl_.returning_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResponsePublish::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.ResponsePublish)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 returning_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this->_internal_returning_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.ResponsePublish)
  return target;
}

::size_t ResponsePublish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.ResponsePublish)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 returning_id = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_returning_id());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponsePublish::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponsePublish::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponsePublish::GetClassData() const { return &_class_data_; }


void ResponsePublish::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponsePublish*>(&to_msg);
  auto& from = static_cast<const ResponsePublish&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.ResponsePublish)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_returning_id(from._internal_returning_id());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponsePublish::CopyFrom(const ResponsePublish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.ResponsePublish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponsePublish::IsInitialized() const {
  return true;
}

void ResponsePublish::InternalSwap(ResponsePublish* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponsePublish, _impl_.success_)
      + sizeof(ResponsePublish::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(ResponsePublish, _impl_.returning_id_)>(
          reinterpret_cast<char*>(&_impl_.returning_id_),
          reinterpret_cast<char*>(&other->_impl_.returning_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponsePublish::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[9]);
}
// ===================================================================

class ResponseDispose::_Internal {
 public:
};

ResponseDispose::ResponseDispose(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.ResponseDispose)
}
ResponseDispose::ResponseDispose(const ResponseDispose& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.ResponseDispose)
}

inline void ResponseDispose::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.success_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResponseDispose::~ResponseDispose() {
  // @@protoc_insertion_point(destructor:MessageStructures.ResponseDispose)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseDispose::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponseDispose::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseDispose::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.ResponseDispose)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseDispose::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResponseDispose::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.ResponseDispose)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.ResponseDispose)
  return target;
}

::size_t ResponseDispose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.ResponseDispose)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseDispose::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseDispose::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseDispose::GetClassData() const { return &_class_data_; }


void ResponseDispose::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseDispose*>(&to_msg);
  auto& from = static_cast<const ResponseDispose&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.ResponseDispose)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseDispose::CopyFrom(const ResponseDispose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.ResponseDispose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseDispose::IsInitialized() const {
  return true;
}

void ResponseDispose::InternalSwap(ResponseDispose* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseDispose::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[10]);
}
// ===================================================================

class ResponseMassDisposeCompaction::_Internal {
 public:
};

ResponseMassDisposeCompaction::ResponseMassDisposeCompaction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.ResponseMassDisposeCompaction)
}
ResponseMassDisposeCompaction::ResponseMassDisposeCompaction(const ResponseMassDisposeCompaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.ResponseMassDisposeCompaction)
}

inline void ResponseMassDisposeCompaction::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.deleted_rows_) { ::int64_t{0} }

    , decltype(_impl_.success_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResponseMassDisposeCompaction::~ResponseMassDisposeCompaction() {
  // @@protoc_insertion_point(destructor:MessageStructures.ResponseMassDisposeCompaction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseMassDisposeCompaction::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponseMassDisposeCompaction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseMassDisposeCompaction::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.ResponseMassDisposeCompaction)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.deleted_rows_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.deleted_rows_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseMassDisposeCompaction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 deleted_rows = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.deleted_rows_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResponseMassDisposeCompaction::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.ResponseMassDisposeCompaction)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // int64 deleted_rows = 2;
  if (this->_internal_deleted_rows() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this->_internal_deleted_rows(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.ResponseMassDisposeCompaction)
  return target;
}

::size_t ResponseMassDisposeCompaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.ResponseMassDisposeCompaction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 deleted_rows = 2;
  if (this->_internal_deleted_rows() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_deleted_rows());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseMassDisposeCompaction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseMassDisposeCompaction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseMassDisposeCompaction::GetClassData() const { return &_class_data_; }


void ResponseMassDisposeCompaction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseMassDisposeCompaction*>(&to_msg);
  auto& from = static_cast<const ResponseMassDisposeCompaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.ResponseMassDisposeCompaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_deleted_rows() != 0) {
    _this->_internal_set_deleted_rows(from._internal_deleted_rows());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseMassDisposeCompaction::CopyFrom(const ResponseMassDisposeCompaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.ResponseMassDisposeCompaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMassDisposeCompaction::IsInitialized() const {
  return true;
}

void ResponseMassDisposeCompaction::InternalSwap(ResponseMassDisposeCompaction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseMassDisposeCompaction, _impl_.success_)
      + sizeof(ResponseMassDisposeCompaction::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(ResponseMassDisposeCompaction, _impl_.deleted_rows_)>(
          reinterpret_cast<char*>(&_impl_.deleted_rows_),
          reinterpret_cast<char*>(&other->_impl_.deleted_rows_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseMassDisposeCompaction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[11]);
}
// ===================================================================

class QueryGenericRow::_Internal {
 public:
};

QueryGenericRow::QueryGenericRow(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.QueryGenericRow)
}
QueryGenericRow::QueryGenericRow(const QueryGenericRow& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryGenericRow* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.value_) {}

    , decltype(_impl_.old_value_) {}

    , decltype(_impl_.max_id_) {}

    , decltype(_impl_.compaction_prev_revision_) {}

    , decltype(_impl_.theid_) {}

    , decltype(_impl_.created_) {}

    , decltype(_impl_.deleted_) {}

    , decltype(_impl_.create_revision_) {}

    , decltype(_impl_.prev_revision_) {}

    , decltype(_impl_.lease_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), _this->GetArenaForAllocation());
  }
  _impl_.old_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.old_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_old_value().empty()) {
    _this->_impl_.old_value_.Set(from._internal_old_value(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.max_id_, &from._impl_.max_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.lease_) -
    reinterpret_cast<char*>(&_impl_.max_id_)) + sizeof(_impl_.lease_));
  // @@protoc_insertion_point(copy_constructor:MessageStructures.QueryGenericRow)
}

inline void QueryGenericRow::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.value_) {}

    , decltype(_impl_.old_value_) {}

    , decltype(_impl_.max_id_) { ::int64_t{0} }

    , decltype(_impl_.compaction_prev_revision_) { ::int64_t{0} }

    , decltype(_impl_.theid_) { ::int64_t{0} }

    , decltype(_impl_.created_) { ::int64_t{0} }

    , decltype(_impl_.deleted_) { ::int64_t{0} }

    , decltype(_impl_.create_revision_) { ::int64_t{0} }

    , decltype(_impl_.prev_revision_) { ::int64_t{0} }

    , decltype(_impl_.lease_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.old_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.old_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryGenericRow::~QueryGenericRow() {
  // @@protoc_insertion_point(destructor:MessageStructures.QueryGenericRow)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryGenericRow::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
  _impl_.old_value_.Destroy();
}

void QueryGenericRow::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryGenericRow::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.QueryGenericRow)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.old_value_.ClearToEmpty();
  ::memset(&_impl_.max_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lease_) -
      reinterpret_cast<char*>(&_impl_.max_id_)) + sizeof(_impl_.lease_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryGenericRow::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 max_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.max_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 compaction_prev_revision = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.compaction_prev_revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 theid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.theid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "MessageStructures.QueryGenericRow.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 created = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.created_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 deleted = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _impl_.deleted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 create_revision = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.create_revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 prev_revision = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 64)) {
          _impl_.prev_revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 lease = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 72)) {
          _impl_.lease_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes value = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bytes old_value = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_old_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryGenericRow::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.QueryGenericRow)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_id = 1;
  if (this->_internal_max_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_max_id(), target);
  }

  // int64 compaction_prev_revision = 2;
  if (this->_internal_compaction_prev_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this->_internal_compaction_prev_revision(), target);
  }

  // int64 theid = 3;
  if (this->_internal_theid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this->_internal_theid(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "MessageStructures.QueryGenericRow.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 created = 5;
  if (this->_internal_created() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        5, this->_internal_created(), target);
  }

  // int64 deleted = 6;
  if (this->_internal_deleted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        6, this->_internal_deleted(), target);
  }

  // int64 create_revision = 7;
  if (this->_internal_create_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        7, this->_internal_create_revision(), target);
  }

  // int64 prev_revision = 8;
  if (this->_internal_prev_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        8, this->_internal_prev_revision(), target);
  }

  // int64 lease = 9;
  if (this->_internal_lease() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        9, this->_internal_lease(), target);
  }

  // bytes value = 10;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(10, _s, target);
  }

  // bytes old_value = 11;
  if (!this->_internal_old_value().empty()) {
    const std::string& _s = this->_internal_old_value();
    target = stream->WriteBytesMaybeAliased(11, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.QueryGenericRow)
  return target;
}

::size_t QueryGenericRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.QueryGenericRow)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // bytes value = 10;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  // bytes old_value = 11;
  if (!this->_internal_old_value().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
                                    this->_internal_old_value());
  }

  // int64 max_id = 1;
  if (this->_internal_max_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_max_id());
  }

  // int64 compaction_prev_revision = 2;
  if (this->_internal_compaction_prev_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_compaction_prev_revision());
  }

  // int64 theid = 3;
  if (this->_internal_theid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_theid());
  }

  // int64 created = 5;
  if (this->_internal_created() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_created());
  }

  // int64 deleted = 6;
  if (this->_internal_deleted() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_deleted());
  }

  // int64 create_revision = 7;
  if (this->_internal_create_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_create_revision());
  }

  // int64 prev_revision = 8;
  if (this->_internal_prev_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_prev_revision());
  }

  // int64 lease = 9;
  if (this->_internal_lease() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_lease());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryGenericRow::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryGenericRow::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryGenericRow::GetClassData() const { return &_class_data_; }


void QueryGenericRow::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryGenericRow*>(&to_msg);
  auto& from = static_cast<const QueryGenericRow&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.QueryGenericRow)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_old_value().empty()) {
    _this->_internal_set_old_value(from._internal_old_value());
  }
  if (from._internal_max_id() != 0) {
    _this->_internal_set_max_id(from._internal_max_id());
  }
  if (from._internal_compaction_prev_revision() != 0) {
    _this->_internal_set_compaction_prev_revision(from._internal_compaction_prev_revision());
  }
  if (from._internal_theid() != 0) {
    _this->_internal_set_theid(from._internal_theid());
  }
  if (from._internal_created() != 0) {
    _this->_internal_set_created(from._internal_created());
  }
  if (from._internal_deleted() != 0) {
    _this->_internal_set_deleted(from._internal_deleted());
  }
  if (from._internal_create_revision() != 0) {
    _this->_internal_set_create_revision(from._internal_create_revision());
  }
  if (from._internal_prev_revision() != 0) {
    _this->_internal_set_prev_revision(from._internal_prev_revision());
  }
  if (from._internal_lease() != 0) {
    _this->_internal_set_lease(from._internal_lease());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGenericRow::CopyFrom(const QueryGenericRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.QueryGenericRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGenericRow::IsInitialized() const {
  return true;
}

void QueryGenericRow::InternalSwap(QueryGenericRow* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, lhs_arena,
                                       &other->_impl_.value_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.old_value_, lhs_arena,
                                       &other->_impl_.old_value_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryGenericRow, _impl_.lease_)
      + sizeof(QueryGenericRow::_impl_.lease_)
      - PROTOBUF_FIELD_OFFSET(QueryGenericRow, _impl_.max_id_)>(
          reinterpret_cast<char*>(&_impl_.max_id_),
          reinterpret_cast<char*>(&other->_impl_.max_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryGenericRow::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[12]);
}
// ===================================================================

class ResponseQueryGeneric::_Internal {
 public:
};

ResponseQueryGeneric::ResponseQueryGeneric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.ResponseQueryGeneric)
}
ResponseQueryGeneric::ResponseQueryGeneric(const ResponseQueryGeneric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResponseQueryGeneric* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.row_){from._impl_.row_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.ResponseQueryGeneric)
}

inline void ResponseQueryGeneric::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.row_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResponseQueryGeneric::~ResponseQueryGeneric() {
  // @@protoc_insertion_point(destructor:MessageStructures.ResponseQueryGeneric)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseQueryGeneric::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_row()->~RepeatedPtrField();
}

void ResponseQueryGeneric::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseQueryGeneric::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.ResponseQueryGeneric)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_row()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseQueryGeneric::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .MessageStructures.QueryGenericRow row = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_row(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResponseQueryGeneric::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.ResponseQueryGeneric)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MessageStructures.QueryGenericRow row = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_row_size()); i < n; i++) {
    const auto& repfield = this->_internal_row(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.ResponseQueryGeneric)
  return target;
}

::size_t ResponseQueryGeneric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.ResponseQueryGeneric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MessageStructures.QueryGenericRow row = 1;
  total_size += 1UL * this->_internal_row_size();
  for (const auto& msg : this->_internal_row()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseQueryGeneric::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseQueryGeneric::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseQueryGeneric::GetClassData() const { return &_class_data_; }


void ResponseQueryGeneric::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseQueryGeneric*>(&to_msg);
  auto& from = static_cast<const ResponseQueryGeneric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.ResponseQueryGeneric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_row()->MergeFrom(from._internal_row());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseQueryGeneric::CopyFrom(const ResponseQueryGeneric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.ResponseQueryGeneric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseQueryGeneric::IsInitialized() const {
  return true;
}

void ResponseQueryGeneric::InternalSwap(ResponseQueryGeneric* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_row()->InternalSwap(other->_internal_mutable_row());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseQueryGeneric::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[13]);
}
// ===================================================================

class ResponseQueryThree::_Internal {
 public:
};

ResponseQueryThree::ResponseQueryThree(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.ResponseQueryThree)
}
ResponseQueryThree::ResponseQueryThree(const ResponseQueryThree& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.ResponseQueryThree)
}

inline void ResponseQueryThree::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { ::int64_t{0} }

    , decltype(_impl_.count_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResponseQueryThree::~ResponseQueryThree() {
  // @@protoc_insertion_point(destructor:MessageStructures.ResponseQueryThree)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseQueryThree::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponseQueryThree::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseQueryThree::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.ResponseQueryThree)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.count_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseQueryThree::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int64 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResponseQueryThree::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.ResponseQueryThree)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_id(), target);
  }

  // int64 count = 2;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.ResponseQueryThree)
  return target;
}

::size_t ResponseQueryThree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.ResponseQueryThree)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // int64 count = 2;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseQueryThree::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseQueryThree::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseQueryThree::GetClassData() const { return &_class_data_; }


void ResponseQueryThree::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseQueryThree*>(&to_msg);
  auto& from = static_cast<const ResponseQueryThree&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.ResponseQueryThree)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseQueryThree::CopyFrom(const ResponseQueryThree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.ResponseQueryThree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseQueryThree::IsInitialized() const {
  return true;
}

void ResponseQueryThree::InternalSwap(ResponseQueryThree* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseQueryThree, _impl_.count_)
      + sizeof(ResponseQueryThree::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(ResponseQueryThree, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseQueryThree::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[14]);
}
// ===================================================================

class ResponseQueryCompactRevision::_Internal {
 public:
};

ResponseQueryCompactRevision::ResponseQueryCompactRevision(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.ResponseQueryCompactRevision)
}
ResponseQueryCompactRevision::ResponseQueryCompactRevision(const ResponseQueryCompactRevision& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.ResponseQueryCompactRevision)
}

inline void ResponseQueryCompactRevision::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResponseQueryCompactRevision::~ResponseQueryCompactRevision() {
  // @@protoc_insertion_point(destructor:MessageStructures.ResponseQueryCompactRevision)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseQueryCompactRevision::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponseQueryCompactRevision::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseQueryCompactRevision::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.ResponseQueryCompactRevision)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseQueryCompactRevision::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResponseQueryCompactRevision::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.ResponseQueryCompactRevision)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.ResponseQueryCompactRevision)
  return target;
}

::size_t ResponseQueryCompactRevision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.ResponseQueryCompactRevision)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseQueryCompactRevision::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseQueryCompactRevision::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseQueryCompactRevision::GetClassData() const { return &_class_data_; }


void ResponseQueryCompactRevision::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseQueryCompactRevision*>(&to_msg);
  auto& from = static_cast<const ResponseQueryCompactRevision&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.ResponseQueryCompactRevision)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseQueryCompactRevision::CopyFrom(const ResponseQueryCompactRevision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.ResponseQueryCompactRevision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseQueryCompactRevision::IsInitialized() const {
  return true;
}

void ResponseQueryCompactRevision::InternalSwap(ResponseQueryCompactRevision* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseQueryCompactRevision::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[15]);
}
// ===================================================================

class ResponseQueryMaximumId::_Internal {
 public:
};

ResponseQueryMaximumId::ResponseQueryMaximumId(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageStructures.ResponseQueryMaximumId)
}
ResponseQueryMaximumId::ResponseQueryMaximumId(const ResponseQueryMaximumId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStructures.ResponseQueryMaximumId)
}

inline void ResponseQueryMaximumId::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResponseQueryMaximumId::~ResponseQueryMaximumId() {
  // @@protoc_insertion_point(destructor:MessageStructures.ResponseQueryMaximumId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseQueryMaximumId::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponseQueryMaximumId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseQueryMaximumId::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStructures.ResponseQueryMaximumId)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseQueryMaximumId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResponseQueryMaximumId::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStructures.ResponseQueryMaximumId)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStructures.ResponseQueryMaximumId)
  return target;
}

::size_t ResponseQueryMaximumId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStructures.ResponseQueryMaximumId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseQueryMaximumId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseQueryMaximumId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseQueryMaximumId::GetClassData() const { return &_class_data_; }


void ResponseQueryMaximumId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseQueryMaximumId*>(&to_msg);
  auto& from = static_cast<const ResponseQueryMaximumId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageStructures.ResponseQueryMaximumId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseQueryMaximumId::CopyFrom(const ResponseQueryMaximumId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStructures.ResponseQueryMaximumId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseQueryMaximumId::IsInitialized() const {
  return true;
}

void ResponseQueryMaximumId::InternalSwap(ResponseQueryMaximumId* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseQueryMaximumId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Communication_2eproto_getter, &descriptor_table_Communication_2eproto_once,
      file_level_metadata_Communication_2eproto[16]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace MessageStructures
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::MessageStructures::KineTest*
Arena::CreateMaybeMessage< ::MessageStructures::KineTest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::KineTest >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::ResponseTest*
Arena::CreateMaybeMessage< ::MessageStructures::ResponseTest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::ResponseTest >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::KineInsert*
Arena::CreateMaybeMessage< ::MessageStructures::KineInsert >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::KineInsert >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::KineDispose*
Arena::CreateMaybeMessage< ::MessageStructures::KineDispose >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::KineDispose >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::KineMassDisposeCompaction*
Arena::CreateMaybeMessage< ::MessageStructures::KineMassDisposeCompaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::KineMassDisposeCompaction >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::KineQueryGeneric*
Arena::CreateMaybeMessage< ::MessageStructures::KineQueryGeneric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::KineQueryGeneric >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::KineQueryThree*
Arena::CreateMaybeMessage< ::MessageStructures::KineQueryThree >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::KineQueryThree >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::KineQueryCompactRevision*
Arena::CreateMaybeMessage< ::MessageStructures::KineQueryCompactRevision >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::KineQueryCompactRevision >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::KineQueryMaximumId*
Arena::CreateMaybeMessage< ::MessageStructures::KineQueryMaximumId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::KineQueryMaximumId >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::ResponsePublish*
Arena::CreateMaybeMessage< ::MessageStructures::ResponsePublish >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::ResponsePublish >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::ResponseDispose*
Arena::CreateMaybeMessage< ::MessageStructures::ResponseDispose >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::ResponseDispose >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::ResponseMassDisposeCompaction*
Arena::CreateMaybeMessage< ::MessageStructures::ResponseMassDisposeCompaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::ResponseMassDisposeCompaction >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::QueryGenericRow*
Arena::CreateMaybeMessage< ::MessageStructures::QueryGenericRow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::QueryGenericRow >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::ResponseQueryGeneric*
Arena::CreateMaybeMessage< ::MessageStructures::ResponseQueryGeneric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::ResponseQueryGeneric >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::ResponseQueryThree*
Arena::CreateMaybeMessage< ::MessageStructures::ResponseQueryThree >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::ResponseQueryThree >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::ResponseQueryCompactRevision*
Arena::CreateMaybeMessage< ::MessageStructures::ResponseQueryCompactRevision >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::ResponseQueryCompactRevision >(arena);
}
template<> PROTOBUF_NOINLINE ::MessageStructures::ResponseQueryMaximumId*
Arena::CreateMaybeMessage< ::MessageStructures::ResponseQueryMaximumId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MessageStructures::ResponseQueryMaximumId >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
